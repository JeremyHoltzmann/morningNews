{"ast":null,"code":"var _jsxFileName = \"/Users/jeremyholtzmann/lacapsule/project/morning news/part1/src/ScreenSource.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { List, Avatar } from 'antd';\nimport Nav from './Nav';\nimport { Link } from 'react-router-dom';\nimport ScreenArticlesBySource from './ScreenArticlesBySource';\n\nfunction ScreenSource() {\n  const [sourceList, setSourceList] = useState([]);\n  useEffect(() => {\n    fetch('https://newsapi.org/v2/top-headlines/sources?apiKey=dd0594311c8644e7a83119ce2dcdd00b&language=fr&country=fr').then(response => response.json()).then(data => setSourceList(data.sources.map(element => ({\n      id: element.id,\n      name: element.name,\n      url: element.url,\n      description: element.description,\n      category: element.category\n    }))));\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"HomeThemes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: sourceList,\n    renderItem: item => React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(List.Item.Meta, {\n      avatar: React.createElement(Avatar, {\n        src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }),\n      title: React.createElement(Link, {\n        to: \"/ScreenArticleBySource/ + {item.id}\",\n        component: ScreenArticlesBySource,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, item.name),\n      description: item.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })));\n}\n\nexport default ScreenSource;","map":{"version":3,"sources":["/Users/jeremyholtzmann/lacapsule/project/morning news/part1/src/ScreenSource.js"],"names":["React","useState","useEffect","List","Avatar","Nav","Link","ScreenArticlesBySource","ScreenSource","sourceList","setSourceList","fetch","then","response","json","data","sources","map","element","id","name","url","description","category","item"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAO,WAAP;AACA,SAASC,IAAT,EAAeC,MAAf,QAA4B,MAA5B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,sBAAP,MAAmC,0BAAnC;;AAGA,SAASC,YAAT,GAAwB;AAEtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEdS,IAAAA,KAAK,CAAC,6GAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAIL,aAAa,CAACK,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAiBC,OAAO,KACjD;AACCC,MAAAA,EAAE,EAAED,OAAO,CAACC,EADb;AAECC,MAAAA,IAAI,EAAEF,OAAO,CAACE,IAFf;AAGCC,MAAAA,GAAG,EAAEH,OAAO,CAACG,GAHd;AAICC,MAAAA,WAAW,EAAEJ,OAAO,CAACI,WAJtB;AAKCC,MAAAA,QAAQ,EAAEL,OAAO,CAACK;AALnB,KADiD,CAAxB,CAAD,CAF3B;AAWD,GAbQ,EAaN,EAbM,CAAT;AAgBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGG;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,EAKG;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEO,oBAAC,IAAD;AACI,IAAA,UAAU,EAAC,YADf;AAEI,IAAA,UAAU,EAAEd,UAFhB;AAGI,IAAA,UAAU,EAAEe,IAAI,IACd,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AACE,MAAA,MAAM,EAAE,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,kEAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADV;AAEE,MAAA,KAAK,EAAE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,qCAAT;AAA+C,QAAA,SAAS,EAAEjB,sBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmFiB,IAAI,CAACJ,IAAxF,CAFT;AAGE,MAAA,WAAW,EAAEI,IAAI,CAACF,WAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFP,CALH,CADF;AA2BD;;AAED,eAAed,YAAf","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport './App.css';\nimport { List, Avatar} from 'antd';\nimport Nav from './Nav'\nimport { Link } from 'react-router-dom';\n\nimport ScreenArticlesBySource from './ScreenArticlesBySource'\n\n\nfunction ScreenSource() {\n\n  const [sourceList, setSourceList] = useState([]); \n\n  useEffect(() => {\n    \n    fetch('https://newsapi.org/v2/top-headlines/sources?apiKey=dd0594311c8644e7a83119ce2dcdd00b&language=fr&country=fr')\n    .then(response => response.json())\n    .then(data => setSourceList(data.sources.map(element => \n      ({\n        id: element.id,\n        name: element.name,\n        url: element.url,\n        description: element.description,\n        category: element.category,\n      }))))\n  \n  }, [])\n  \n\n  return (\n    <div>\n        <Nav/>\n       \n       <div className=\"Banner\"/>\n\n       <div className=\"HomeThemes\">\n          \n              <List\n                  itemLayout=\"horizontal\"\n                  dataSource={sourceList}\n                  renderItem={item => (\n                    <List.Item>\n                      <List.Item.Meta\n                        avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                        title={<Link to='/ScreenArticleBySource/ + {item.id}' component={ScreenArticlesBySource}>{item.name}</Link>}\n                        description={item.description}\n                      />\n                    </List.Item>\n                  )}\n                />\n\n\n          </div>\n                 \n      </div>\n  );\n}\n\nexport default ScreenSource;\n"]},"metadata":{},"sourceType":"module"}