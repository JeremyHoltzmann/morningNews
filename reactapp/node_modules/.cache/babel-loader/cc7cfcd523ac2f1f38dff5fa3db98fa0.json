{"ast":null,"code":"var _jsxFileName = \"/Users/jeremyholtzmann/lacapsule/project/morning news/part3/backend/reactapp/src/ScreenArticlesBySource.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { Card, Icon, Row, Col, Modal, Button } from \"antd\";\nimport Nav from \"./Nav\";\nimport { useParams } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nconst {\n  Meta\n} = Card;\n\nfunction ScreenArticlesBySource(props) {\n  var {\n    id\n  } = useParams();\n  const [articleArray, setArticleArray] = useState([]);\n  const [modalTitle, setModalTitle] = useState(\"\");\n  const [modalContent, setModalContent] = useState(\"\");\n  const [sourceLanguage, setSourceLanguage] = useState(\"fr\");\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = i => {\n    setModalTitle(articleArray[i].title);\n    setModalContent(articleArray[i].content);\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  useEffect(() => {\n    var req = \"https://newsapi.org/v2/top-headlines?apiKey=dd0594311c8644e7a83119ce2dcdd00b&language=\" + props.language + \"&sources=\" + id;\n    fetch(req).then(response => response.json()).then(data => {\n      setArticleArray(data.articles);\n    });\n  }, []);\n  useEffect(() => {\n    console.log(\"ðŸš€ ~ file: ScreenArticlesBySource.js ~ line 52 ~ useEffect ~ props.language\", props.language);\n    console.log(\"ðŸš€ ~ file: ScreenArticlesBySource.js ~ line 52 ~ useEffect ~ props.language\", id);\n    var req = \"https://newsapi.org/v2/top-headlines?apiKey=dd0594311c8644e7a83119ce2dcdd00b&language=\" + props.language + \"&sources=\" + id;\n    fetch(req).then(response => response.json()).then(data => {\n      setArticleArray(data.articles);\n    });\n  }, [props.language]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Row, {\n    gutter: 16,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, articleArray.map((element, i) => React.createElement(Col, {\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: {\n      height: 500,\n      width: 300,\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    cover: React.createElement(\"img\", {\n      alt: \"example\",\n      src: element.urlToImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }),\n    actions: [React.createElement(Icon, {\n      type: \"read\",\n      key: \"ellipsis2\",\n      onClick: () => showModal(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Icon, {\n      type: \"like\",\n      key: \"ellipsis\",\n      onClick: () => props.addArticle({\n        title: element.title,\n        description: element.description,\n        content: element.content,\n        img: element.urlToImage\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Meta, {\n    title: element.title,\n    description: element.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })))))), \"if(modalArticle)\", React.createElement(Modal, {\n    title: modalTitle,\n    visible: isModalVisible,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, modalContent)));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    language: state.language\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addArticle: function (article) {\n      dispatch({\n        type: \"addArticle\",\n        article\n      });\n    },\n    changeLanguage: function (langue) {\n      dispatch({\n        type: \"changeLanguage\",\n        langue\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreenArticlesBySource);","map":{"version":3,"sources":["/Users/jeremyholtzmann/lacapsule/project/morning news/part3/backend/reactapp/src/ScreenArticlesBySource.js"],"names":["React","Card","Icon","Row","Col","Modal","Button","Nav","useParams","useState","useEffect","connect","Meta","ScreenArticlesBySource","props","id","articleArray","setArticleArray","modalTitle","setModalTitle","modalContent","setModalContent","sourceLanguage","setSourceLanguage","isModalVisible","setIsModalVisible","showModal","i","title","content","handleOk","handleCancel","req","language","fetch","then","response","json","data","articles","console","log","display","justifyContent","map","element","height","width","flexDirection","urlToImage","addArticle","description","img","mapStateToProps","state","mapDispatchToProps","dispatch","article","type","changeLanguage","langue"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { Card, Icon, Row, Col, Modal, Button } from \"antd\";\nimport Nav from \"./Nav\";\nimport { useParams } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nconst { Meta } = Card;\n\nfunction ScreenArticlesBySource(props) {\n  var { id } = useParams();\n\n  const [articleArray, setArticleArray] = useState([]);\n  const [modalTitle, setModalTitle] = useState(\"\");\n  const [modalContent, setModalContent] = useState(\"\");\n  const [sourceLanguage, setSourceLanguage] = useState(\"fr\");\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = (i) => {\n    setModalTitle(articleArray[i].title);\n    setModalContent(articleArray[i].content);\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  useEffect(() => {\n    var req =\n      \"https://newsapi.org/v2/top-headlines?apiKey=dd0594311c8644e7a83119ce2dcdd00b&language=\" +\n      props.language +\n      \"&sources=\" +\n      id;\n    fetch(req)\n      .then((response) => response.json())\n      .then((data) => {\n        setArticleArray(data.articles);\n      });\n  }, []);\n\n  useEffect(() => {\n    console.log(\n      \"ðŸš€ ~ file: ScreenArticlesBySource.js ~ line 52 ~ useEffect ~ props.language\",\n      props.language\n    );\n\n    console.log(\n      \"ðŸš€ ~ file: ScreenArticlesBySource.js ~ line 52 ~ useEffect ~ props.language\",\n      id\n    );\n    var req =\n      \"https://newsapi.org/v2/top-headlines?apiKey=dd0594311c8644e7a83119ce2dcdd00b&language=\" +\n      props.language +\n      \"&sources=\" +\n      id;\n    fetch(req)\n      .then((response) => response.json())\n      .then((data) => {\n        setArticleArray(data.articles);\n      });\n  }, [props.language]);\n\n  return (\n    <div>\n      <Nav />\n      <div className=\"Banner\"></div>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Row gutter={16}>\n          {articleArray.map((element, i) => (\n            <Col span={8}>\n              <Card\n                style={{\n                  height: 500,\n                  width: 300,\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                }}\n                cover={<img alt=\"example\" src={element.urlToImage} />}\n                actions={[\n                  <Icon\n                    type=\"read\"\n                    key=\"ellipsis2\"\n                    onClick={() => showModal(i)}\n                  />,\n                  <Icon\n                    type=\"like\"\n                    key=\"ellipsis\"\n                    onClick={() =>\n                      props.addArticle({\n                        title: element.title,\n                        description: element.description,\n                        content: element.content,\n                        img: element.urlToImage,\n                      })\n                    }\n                  />,\n                ]}\n              >\n                <Meta title={element.title} description={element.description} />\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      </div>\n      if(modalArticle)\n      {\n        <Modal\n          title={modalTitle}\n          visible={isModalVisible}\n          onOk={handleOk}\n          onCancel={handleCancel}\n        >\n          <p>{modalContent}</p>\n        </Modal>\n      }\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return { language: state.language };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addArticle: function (article) {\n      dispatch({ type: \"addArticle\", article });\n    },\n    changeLanguage: function (langue) {\n      dispatch({ type: \"changeLanguage\", langue });\n    },\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ScreenArticlesBySource);\n"]},"metadata":{},"sourceType":"module"}